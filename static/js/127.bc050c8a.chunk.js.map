{"version":3,"file":"static/js/127.bc050c8a.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","store/ContactSlice/selectors.js","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactItem/ContactItem.module.css?be2b","components/ContactItem/ContactItem.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","store/filterSlice/selectors.js","store/Loading/selectors.js","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","page/PhoneBookPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"title\":\"ContactForm_title__jZguf\",\"input\":\"ContactForm_input__Bl93P\",\"btn\":\"ContactForm_btn__wll+u\"};","export const selectContacts = state => state.contacts;\n","// import { useDispatch, useSelector } from 'react-redux';\nimport { useDispatch, useSelector } from 'react-redux';\nimport css from './ContactForm.module.css';\nimport { selectContacts } from 'store/ContactSlice/selectors';\nimport { postNewContact } from 'store/operetions';\n\nfunction ContactForm() {\n  const { items } = useSelector(selectContacts);\n  const dispatch = useDispatch();\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n    const number = form.number.value;\n    const name = form.name.value;\n    const contact = {\n      name,\n      number,\n    };\n\n    const isDublicated = items.find(\n      e => e.name.toLowerCase() === contact.name.toLowerCase()\n    );\n    if (isDublicated) {\n      alert('This contact is already added');\n      return;\n    } else {\n      dispatch(postNewContact(contact));\n    }\n    form.reset();\n  };\n  return (\n    <div>\n      <form className={css.form} onSubmit={handleSubmit}>\n        <div>\n          <label htmlFor=\"nameInput\">\n            <h3 className={css.title}>Name</h3>\n          </label>\n          <input\n            className={css.input}\n            type=\"text\"\n            name=\"name\"\n            // value={name}\n            required\n            // onChange={handleChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"telInput\">\n            <h3 className={css.title}>Number</h3>\n          </label>\n          <input\n            className={css.input}\n            type=\"tel\"\n            name=\"number\"\n            // value={number}\n            required\n            // onChange={handleChange}\n          />\n        </div>\n        <button className={css.btn} type=\"submit\">\n          Add contact ðŸ“²\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"ContactItem_btn__1h5dG\",\"item\":\"ContactItem_item__gxreB\",\"name\":\"ContactItem_name__XjpNK\",\"tel\":\"ContactItem_tel__sDTM4\"};","import { useDispatch } from 'react-redux';\nimport css from './ContactItem.module.css';\nimport { deleteContact } from 'store/operetions';\nexport default function ContactItem({ id, name, number }) {\n  const dispatch = useDispatch();\n\n  const delele = id => {\n    dispatch(deleteContact(id));\n  };\n\n  const handlerClick = () => {\n    delele(id);\n  };\n\n  const telLink = `tel:${number}`;\n\n  return (\n    <li className={css.item}>\n      <span>\n        <p className={css.name}>{name}</p>\n\n        <a className={css.tel} href={telLink}>\n          {number}\n        </a>\n      </span>\n      <button className={css.btn} onClick={handlerClick}>\n        Delete ðŸ—‘\n      </button>\n    </li>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"ContactList_title__gpugJ\"};","export const selectFilter = state => state.filter;\n","export const selectLoading = state => state.loading;\n","import ContactItem from 'components/ContactItem/ContactItem.jsx';\nimport css from './ContactList.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'store/ContactSlice/selectors';\nimport { selectFilter } from 'store/filterSlice/selectors';\nimport { useEffect } from 'react';\nimport { selectLoading } from 'store/Loading/selectors';\nimport { getContactsThunk } from 'store/operetions';\n\nexport default function ContactList() {\n  const dispatch = useDispatch();\n  const { items } = useSelector(selectContacts);\n  const { filter } = useSelector(selectFilter);\n  const { isLoading } = useSelector(selectLoading);\n\n  useEffect(() => {\n    dispatch(getContactsThunk());\n  }, [dispatch]);\n\n  const filteredContacts =\n    items &&\n    items.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n\n  return (\n    <div>\n      <h2 className={css.title}>Contacts:</h2>\n      <ul>\n        {!isLoading ? (\n          filteredContacts?.map(({ name, number, id }) => {\n            return <ContactItem key={id} id={id} name={name} number={number} />;\n          })\n        ) : (\n          <p>Loading...</p>\n        )}\n      </ul>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Filter_title__pSkfx\",\"input\":\"Filter_input__N7T3z\"};","import { useDispatch, useSelector } from 'react-redux';\nimport css from './Filter.module.css';\nimport { chengeFilter } from 'store/filterSlice/filterSlice';\nimport { selectFilter } from 'store/filterSlice/selectors';\n\nexport default function Filter() {\n  const { filter } = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const hendleChange = e => {\n    const filter = e.target.value;\n    console.log('filter :>> ', filter);\n    dispatch(chengeFilter(filter));\n  };\n\n  return (\n    <div>\n      <label htmlFor=\"filterInput\">\n        <h3 className={css.title}>Serch contact: {filter}ðŸ”Ž</h3>\n      </label>\n      <form action=\"\">\n        <input\n          className={css.input}\n          type=\"text\"\n          name=\"filter\"\n          value={filter}\n          onChange={hendleChange}\n        />\n      </form>\n    </div>\n  );\n}\n","import ContactForm from 'components/ContactForm/ContactForm.jsx';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\n\nexport default function PhoneBook() {\n  return (\n    <div>\n      <ContactForm />\n      <div\n        style={{\n          border: 'solid 2px rgb(11, 26, 68)',\n          borderRadius: '24px',\n          padding: '20px 16px',\n          marginTop: '24px',\n        }}\n      >\n        <Filter />\n        <ContactList />\n      </div>\n    </div>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","useSelector","dispatch","useDispatch","_jsx","children","_jsxs","className","css","onSubmit","e","preventDefault","form","target","number","value","contact","name","isDublicated","find","toLowerCase","alert","postNewContact","reset","htmlFor","type","required","ContactItem","_ref","id","telLink","concat","href","onClick","deleteContact","delele","selectFilter","filter","selectLoading","loading","ContactList","isLoading","useEffect","getContactsThunk","filteredContacts","includes","map","Filter","action","onChange","console","log","chengeFilter","PhoneBook","ContactForm","style","border","borderRadius","padding","marginTop"],"sourceRoot":""}